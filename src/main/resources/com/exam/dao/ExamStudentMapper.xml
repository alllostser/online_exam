<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.dao.ExamStudentMapper">
  <resultMap id="BaseResultMap" type="com.exam.pojo.ExamStudent">
    <id column="es_id" jdbcType="INTEGER" property="esId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="total_score" jdbcType="DECIMAL" property="totalScore" />
    <result column="reading" jdbcType="CHAR" property="reading" />
  </resultMap>
  <sql id="Base_Column_List">
    es_id, student_id, exam_id, status, total_score, reading
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_student
    where es_id = #{esId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam_student
    where es_id = #{esId,jdbcType=INTEGER}
  </delete>
<!--  插入数据-->
  <insert id="insert" parameterType="com.exam.pojo.ExamStudent">
    insert into exam_student ( student_id, exam_id)
    values (#{studentId,jdbcType=INTEGER}, #{examId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.exam.pojo.ExamStudent">
    insert into exam_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="esId != null">
        es_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="examId != null">
        exam_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="reading != null">
        reading,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="esId != null">
        #{esId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=DECIMAL},
      </if>
      <if test="reading != null">
        #{reading,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.pojo.ExamStudent">
    update exam_student
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=DECIMAL},
      </if>
      <if test="reading != null">
        reading = #{reading,jdbcType=CHAR},
      </if>
    </set>
    where es_id = #{esId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.pojo.ExamStudent">
    update exam_student
    set student_id = #{studentId,jdbcType=INTEGER},
      exam_id = #{examId,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      total_score = #{totalScore,jdbcType=DECIMAL},
      reading = #{reading,jdbcType=CHAR}
    where es_id = #{esId,jdbcType=INTEGER}
  </update>
<!--  查询考生id集合-->
  <select id="findStudentIdsByExamIds" parameterType="integer" resultType="integer">
    select
    student_id
    from exam_student
    where exam_id = #{examId}
  </select>
<!--  通过试卷id删除数据-->
  <delete id="deleteByExamId" parameterType="integer">
    delete from exam_student where exam_id=#{examId}
  </delete>

  <select id="selectByExamIdAndStuId" resultMap="BaseResultMap">
    select    <include refid="Base_Column_List" />
    from exam_student
    where exam_id=#{exmaId} and student_id=#{studentId}
  </select>
</mapper>