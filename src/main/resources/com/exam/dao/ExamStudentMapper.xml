<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.dao.ExamStudentMapper">
  <resultMap id="BaseResultMap" type="com.exam.pojo.ExamStudent">
    <id column="es_id" jdbcType="INTEGER" property="esId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="exam_id" jdbcType="INTEGER" property="examId" />
    <result column="reviewer_id" jdbcType="INTEGER" property="reviewerId"/>
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="total_score" jdbcType="DECIMAL" property="totalScore" />
    <result column="reading" jdbcType="CHAR" property="reading" />
  </resultMap>
  <sql id="Base_Column_List">
    es_id, student_id, exam_id,reviewer_id,status, total_score, reading
  </sql>

<!--  插入数据-->
  <insert id="insert" parameterType="com.exam.pojo.ExamStudent">
    insert into exam_student ( student_id, exam_id)
    values (#{studentId,jdbcType=INTEGER}, #{examId,jdbcType=INTEGER})
  </insert>
<!--  查询考生id集合-->
  <select id="findStudentIdsByExamIds" parameterType="integer" resultType="integer">
    select
    student_id
    from exam_student
    where exam_id = #{examId}
  </select>
<!--  通过试卷id删除数据-->
  <delete id="deleteByExamId" parameterType="integer">
    delete from exam_student where exam_id=#{examId}
  </delete>
<!--  根据exam的id和stu的id获取单条记录-->
  <select id="selectByExamIdAndStuId" resultMap="BaseResultMap">
    select    <include refid="Base_Column_List" />
    from exam_student
    where exam_id=#{exmaId} and student_id=#{studentId}
  </select>
<!--  根据试卷的id和学生的id，更换它的状态-->
  <update id="updateStatusByExamIdAndStuId">
    update exam_student set status=#{status} where student_id=#{stuId} and exam_id=#{examId}
  </update>
<!--  根据studentId和exam的id更新成绩-->
  <update id="updateReadingAndTotalScoreByStuIdAndExamId">
        update exam_student set reading=#{reading},total_score=#{score} where student_id=#{stuId} and exam_id=#{examId}
  </update>
<!--  根据examId获取ExamStudent实体类的信息-->
  <select id="selectByExamId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from exam_student
    where exam_id=#{examId}
  </select>
<!--  根据studentId和exam的id更新成绩和添加阅卷人id-->
  <update id="updateReadingAndTotalScoreAndReviewerIdByStuIdAndExamId">
        update exam_student
        set reading=#{reading},total_score=#{score},reviewer_id=#{reviewerId}
        where student_id=#{stuId} and exam_id=#{examId}
  </update>
</mapper>